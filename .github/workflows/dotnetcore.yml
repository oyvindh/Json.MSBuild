name: .NET Core

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
    PublicRelease: "${{ github.ref == 'refs/heads/main' && 'True' || 'False' }}"

jobs:
  build:
    env:
      Configuration: "${{ env.PublicRelease && 'Release' || 'Debug' }}"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.7.2

    # Debug build
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration $Configuration --no-restore -warnaserror
    - name: Test
      run: dotnet test --configuration $Configuration --no-restore --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura

    # Release build
    - name: Install dependencies for release
      if: ${{ env.PublicRelease }}
      run: dotnet restore -r linux-musl-x64
    - name: Build release
      if: ${{ env.PublicRelease }}
      run: dotnet build -r linux-musl-x64 --no-self-contained --configuration Release --no-restore -warnaserror
    - name: Package NuGet
      if: ${{ env.PublicRelease }}
      run: dotnet pack --no-restore --no-build --configuration Release
    - uses: actions/upload-artifact@v3
      if: ${{ env.PublicRelease }}
      with:
        name: packages-drop
        path: |
          src/**/*.nupkg

  nuget-release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'disabled' }}
    needs: build
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: build-drop
    - uses: azure/docker-login@v1
      with:
        login-server: hicacr.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    - run: |
        docker build . -t hicacr.azurecr.io/foreignaffairs:${{github.sha}} -t hicacr.azurecr.io/foreignaffairs:latest
        docker push hicacr.azurecr.io/foreignaffairs --all-tags
